name: CI/CD - Validación y Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Prevenir múltiples ejecuciones simultáneas
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Validación básica del código
  validate:
    name: 🔍 Validar Código
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Instalar dependencias
        run: npm ci || npm install

      - name: 📄 Verificar archivos principales
        run: |
          echo "🔍 Verificando estructura del proyecto..."
          test -f index.html && echo "✅ index.html existe" || exit 1
          test -f assets/js/app.js && echo "✅ app.js existe" || exit 1
          test -f assets/css/styles.css && echo "✅ styles.css existe" || exit 1

      - name: 💅 Verificar formateo con Prettier
        run: npm run check:format
        continue-on-error: true

      - name: ✅ Validar estructura HTML
        run: |
          echo "🔍 Validando HTML..."
          grep -iq "<!doctype html>" index.html && echo "✅ HTML válido" || exit 1

  # Job 2: Deploy a GitHub Pages (solo en main)
  deploy:
    name: 🚀 Deploy a GitHub Pages
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: ⚙️ Configurar GitHub Pages
        uses: actions/configure-pages@v4

      - name: 📤 Subir artefacto de Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: 🚀 Deploy a GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ✅ Notificar deploy exitoso
        run: |
          echo "🎉 Deploy completado exitosamente!"
          echo "📍 URL del sitio: ${{ steps.deployment.outputs.page_url }}"

  # Job 3: Auditoría Lighthouse (después del deploy)
  lighthouse:
    name: 📊 Auditoría Lighthouse
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: ⏳ Esperar propagación del deploy
        run: |
          echo "⏳ Esperando 45 segundos para que el sitio se propague..."
          sleep 45

      - name: 📊 Ejecutar Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://dtcsrni.github.io/Mahitek_3D_Lab_MX/
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: 📈 Resultados de Lighthouse
        run: echo "✅ Auditoría Lighthouse completada. Revisa los artefactos para ver los resultados."
