name: CI/CD - Validaci√≥n y Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Prevenir m√∫ltiples ejecuciones simult√°neas
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validar C√≥digo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Instalar dependencias
      run: npm ci || npm install
      
    - name: Verificar archivos JavaScript
      run: |
        if [ -f "assets/js/app.js" ]; then
          echo "‚úÖ app.js encontrado"
          wc -l assets/js/app.js
        else
          echo "‚ùå app.js no encontrado"
          exit 1
        fi
      
    - name: Verificar formateo con Prettier
      run: |
        npx prettier --check "assets/js/app.js" "assets/css/styles.css" "index.html" || {
          echo "‚ö†Ô∏è Algunos archivos necesitan formateo. Ejecuta: npm run format"
          exit 0
        }
      continue-on-error: true
      
    - name: Validar HTML
      run: |
        echo "üîç Verificando estructura HTML..."
        if grep -q "<!DOCTYPE html>" index.html; then
          echo "‚úÖ HTML v√°lido"
        else
          echo "‚ùå HTML inv√°lido"
          exit 1
        fi

  deploy:
    name: Deploy a GitHub Pages
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Configurar Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Notificar deploy exitoso
      run: |
        echo "üöÄ Deploy exitoso!"
        echo "üìç URL: ${{ steps.deployment.outputs.page_url }}"

  lighthouse:
    name: Auditor√≠a Lighthouse (Post-Deploy)
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Esperar propagaci√≥n de deploy
      run: sleep 30
      
    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://dtcsrni.github.io/Mahitek_3D_Lab_MX/
        uploadArtifacts: true
        temporaryPublicStorage: true
      continue-on-error: true
